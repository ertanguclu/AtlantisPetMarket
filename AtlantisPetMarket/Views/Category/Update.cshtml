@model CategoryUpdateVM

@{
    ViewData["Title"] = "Update Category";
}

<h2>Update Category</h2>

<form asp-action="Update" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="CategoryName" class="control-label"></label>
        <input asp-for="CategoryName" class="form-control" />
        <span asp-validation-for="CategoryName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CategoryPhotoPath" class="control-label"></label>
        <input type="file" asp-for="CategoryPhotoPath" class="form-control" />
        <span asp-validation-for="CategoryPhotoPath" class="text-danger"></span>
    </div>

    <label>Üst Kategori</label>
    <div>
        <select asp-for="ParentCategoryId" class="form-select form-select-sm" aria-label=".form-select-sm example">
            @foreach (ParentCategory pcategory in ViewBag.pCategories)
            {
                @if (pcategory.ParentCategoryName == ViewBag.ParentCategoryName)
                {
                    <option value="@pcategory.Id" selected>@pcategory.ParentCategoryName</option>
                }
                else
                {
                    <option value="@pcategory.Id">
                        @pcategory.ParentCategoryName
                    </option>

                }
            }
        </select>
    </div>

    <div class="form-group">
        <input type="submit" value="Update" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
